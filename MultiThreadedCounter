package concurrency;

import java.util.concurrent.locks.ReentrantLock;

public class MultiThreadedCounter {

    private static int counter = 0;
    private static final int LIMIT = 5;
    private static final ReentrantLock lock = new ReentrantLock();

    public static void main(String[] args) {

        Runnable task = () -> {
            for (int i = 0; i < LIMIT; i++) {
                increment();
                try {
                    Thread.sleep(100); 
                } catch (InterruptedException e) {
                    Thread.currentThread().interrupt();
                }
            }
        };

        Thread thread1 = new Thread(task, "Thread-A");
        Thread thread2 = new Thread(task, "Thread-B");

        thread1.start();
        thread2.start();
    }

    private static void increment() {
        lock.lock();
        try {
            counter++;
            System.out.println(Thread.currentThread().getName() + " incremented counter to " + counter);
        } finally {
            lock.unlock();
        }
    }
}
